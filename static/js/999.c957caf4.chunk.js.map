{"version":3,"file":"static/js/999.c957caf4.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/ContactForm/ContactForm.jsx","../node_modules/@chakra-ui/layout/dist/chunk-5FO2ZLZM.mjs","../node_modules/@chakra-ui/breakpoint-utils/dist/chunk-G72KV6MB.mjs","../node_modules/@chakra-ui/layout/dist/chunk-QJDVAY5Z.mjs","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","pages/Contacts.jsx","../node_modules/@chakra-ui/form-control/dist/chunk-6ZNYZUDD.mjs","../node_modules/@chakra-ui/form-control/dist/chunk-RN6VKE3K.mjs","../node_modules/@chakra-ui/form-control/dist/chunk-IJBC3YLI.mjs","../node_modules/@chakra-ui/input/dist/chunk-GYFRIY2Z.mjs"],"sourcesContent":["export const selectContacts = state => state.contacts.items;\nexport const selectStatusFilter = state => state.filter;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { addContact } from 'redux/contacts/operations';\nimport { FormControl, FormLabel, Input, Button, Flex } from '@chakra-ui/react';\n\nconst ContactForm = () => {\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const handleAddContact = e => {\n    e.preventDefault();\n\n    const form = e.target;\n    const name = e.target.name.value;\n    const number = e.target.number.value;\n    const nameOnTheList = contacts.some(\n      contact => contact.name.toLowerCase() === name.toLowerCase()\n    );\n\n    const newContact = {\n      name: name,\n      number: number,\n    };\n\n    if (!nameOnTheList) {\n      dispatch(addContact(newContact));\n      form.reset();\n    } else {\n      alert(`${name} is in use. Try another name.`);\n    }\n  };\n\n  return (\n    <Flex direction=\"column\" align=\"center\" m=\"4\" w={400}>\n      <FormControl as=\"form\" onSubmit={handleAddContact}>\n        <FormLabel htmlFor=\"name\">Name</FormLabel>\n        <Input type=\"text\" name=\"name\" maxLength=\"30\" required mb=\"4\" />\n        <FormLabel htmlFor=\"number\">Number</FormLabel>\n        <Input\n          type=\"tel\"\n          name=\"number\"\n          maxLength=\"30\"\n          pattern=\"/\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]\"\n          required\n          mb=\"4\"\n        />\n        <Button\n          type=\"submit\"\n          bg=\"blue.500\"\n          color=\"white\"\n          p=\"4\"\n          fontSize={20}\n          _hover={{ bg: 'blue.600' }}\n        >\n          Add contact\n        </Button>\n      </FormControl>\n    </Flex>\n  );\n};\n\nexport default ContactForm;\n","// src/grid.tsx\nimport {\n  chakra,\n  forwardRef\n} from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Grid = forwardRef(function Grid2(props, ref) {\n  const {\n    templateAreas,\n    gap,\n    rowGap,\n    columnGap,\n    column,\n    row,\n    autoFlow,\n    autoRows,\n    templateRows,\n    autoColumns,\n    templateColumns,\n    ...rest\n  } = props;\n  const styles = {\n    display: \"grid\",\n    gridTemplateAreas: templateAreas,\n    gridGap: gap,\n    gridRowGap: rowGap,\n    gridColumnGap: columnGap,\n    gridAutoColumns: autoColumns,\n    gridColumn: column,\n    gridRow: row,\n    gridAutoFlow: autoFlow,\n    gridAutoRows: autoRows,\n    gridTemplateRows: templateRows,\n    gridTemplateColumns: templateColumns\n  };\n  return /* @__PURE__ */ jsx(chakra.div, { ref, __css: styles, ...rest });\n});\nGrid.displayName = \"Grid\";\n\nexport {\n  Grid\n};\n","// src/responsive.ts\nimport { isObject } from \"@chakra-ui/shared-utils\";\nvar breakpoints = Object.freeze([\n  \"base\",\n  \"sm\",\n  \"md\",\n  \"lg\",\n  \"xl\",\n  \"2xl\"\n]);\nfunction mapResponsive(prop, mapper) {\n  if (Array.isArray(prop)) {\n    return prop.map((item) => item === null ? null : mapper(item));\n  }\n  if (isObject(prop)) {\n    return Object.keys(prop).reduce((result, key) => {\n      result[key] = mapper(prop[key]);\n      return result;\n    }, {});\n  }\n  if (prop != null) {\n    return mapper(prop);\n  }\n  return null;\n}\nfunction objectToArrayNotation(obj, bps = breakpoints) {\n  const result = bps.map((br) => {\n    var _a;\n    return (_a = obj[br]) != null ? _a : null;\n  });\n  const lastItem = result[result.length - 1];\n  while (lastItem === null)\n    result.pop();\n  return result;\n}\nfunction arrayToObjectNotation(values, bps = breakpoints) {\n  const result = {};\n  values.forEach((value, index) => {\n    const key = bps[index];\n    if (value == null)\n      return;\n    result[key] = value;\n  });\n  return result;\n}\nfunction isResponsiveObjectLike(obj, bps = breakpoints) {\n  const keys = Object.keys(obj);\n  return keys.length > 0 && keys.every((key) => bps.includes(key));\n}\nvar isCustomBreakpoint = (v) => Number.isNaN(Number(v));\n\nexport {\n  breakpoints,\n  mapResponsive,\n  objectToArrayNotation,\n  arrayToObjectNotation,\n  isResponsiveObjectLike,\n  isCustomBreakpoint\n};\n","import {\n  Grid\n} from \"./chunk-5FO2ZLZM.mjs\";\n\n// src/simple-grid.tsx\nimport {\n  forwardRef,\n  getToken,\n  useTheme\n} from \"@chakra-ui/system\";\nimport { mapResponsive } from \"@chakra-ui/breakpoint-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar SimpleGrid = forwardRef(\n  function SimpleGrid2(props, ref) {\n    const { columns, spacingX, spacingY, spacing, minChildWidth, ...rest } = props;\n    const theme = useTheme();\n    const templateColumns = minChildWidth ? widthToColumns(minChildWidth, theme) : countToColumns(columns);\n    return /* @__PURE__ */ jsx(\n      Grid,\n      {\n        ref,\n        gap: spacing,\n        columnGap: spacingX,\n        rowGap: spacingY,\n        templateColumns,\n        ...rest\n      }\n    );\n  }\n);\nSimpleGrid.displayName = \"SimpleGrid\";\nfunction toPx(n) {\n  return typeof n === \"number\" ? `${n}px` : n;\n}\nfunction widthToColumns(width, theme) {\n  return mapResponsive(width, (value) => {\n    const _value = getToken(\"sizes\", value, toPx(value))(theme);\n    return value === null ? null : `repeat(auto-fit, minmax(${_value}, 1fr))`;\n  });\n}\nfunction countToColumns(count) {\n  return mapResponsive(\n    count,\n    (value) => value === null ? null : `repeat(${value}, minmax(0, 1fr))`\n  );\n}\n\nexport {\n  SimpleGrid\n};\n","import { useSelector, useDispatch } from 'react-redux';\nimport {\n  Flex,\n  Box,\n  Text,\n  CloseButton,\n  SimpleGrid,\n} from '@chakra-ui/react';\nimport {\n  selectStatusFilter,\n  selectContacts,\n  selectIsLoading,\n} from 'redux/contacts/selectors';\nimport { deleteContact } from 'redux/contacts/operations';\n\nconst ContactList = () => {\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectStatusFilter);\n  const isLoading = useSelector(selectIsLoading);\n  const dispatch = useDispatch();\n\n  const handleDeleteContact = id => dispatch(deleteContact(id));\n\n  const filteredContacts = contacts.filter(\n    contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase()) ||\n      contact.number.includes(filter)\n  );\n\n  return (\n    <>\n      {isLoading ? (\n        <Text>Loading...</Text>\n      ) : (\n        <SimpleGrid columns={4} spacing={10} m=\"4\">\n          {filteredContacts.length > 0 ? (\n            filteredContacts.map(({ id, name, number }) => (\n              <Box\n                key={id}\n                borderWidth=\"1px\"\n                borderRadius=\"lg\"\n                overflow=\"hidden\"\n                my=\"2\"\n                w={300}\n              >\n                <Flex alignItems=\"center\" justifyContent=\"space-between\" p=\"2\">\n                  <Text>{name}</Text>\n                  <CloseButton onClick={() => handleDeleteContact(id)}/>\n                    \n                 \n                </Flex>\n                <Box p=\"2\">\n                  <Text>{number}</Text>\n                </Box>\n              </Box>\n            ))\n          ) : (\n            <Text>No contacts found</Text>\n          )}\n        </SimpleGrid>\n      )}\n    </>\n  );\n};\n\nexport default ContactList;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { Input, FormControl, FormLabel } from '@chakra-ui/react';\n\nimport { setFilter } from 'redux/contacts/filtersSlice';\nimport { selectStatusFilter } from 'redux/contacts/selectors';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n\n  const onChange = e => {\n    const value = e.target.value.toLowerCase();\n    dispatch(setFilter(value));\n  };\n\n  return (\n    <FormControl id=\"filter\" m=\"4\" w={400}>\n      <FormLabel>Search list:</FormLabel>\n      <Input\n        type=\"search\"\n        name=\"filter\"\n        value={useSelector(selectStatusFilter)}\n        onChange={onChange}\n      />\n    </FormControl>\n  );\n};\n\nexport default Filter;\n","import React from 'react';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n// import { Helmet, HelmetProvider } from 'react-helmet-async';\n\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport ContactList from 'components/ContactList/ContactList';\nimport Filter from 'components/Filter/Filter';\n\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectIsLoading } from 'redux/contacts/selectors';\n\nconst App = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div>\n      \n        <h1>Phonebook</h1>\n      \n      <ContactForm />\n      <div>{isLoading && 'Request in progress...'}</div>\n      {isLoading ? null : <Filter />}\n      <ContactList />\n    </div>\n  );\n};\n\nexport default App;\n","// src/form-control.tsx\nimport { createContext } from \"@chakra-ui/react-context\";\nimport { mergeRefs } from \"@chakra-ui/react-use-merge-refs\";\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useMultiStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx, dataAttr } from \"@chakra-ui/shared-utils\";\nimport { useCallback, useId, useState } from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nvar [FormControlStylesProvider, useFormControlStyles] = createContext({\n  name: `FormControlStylesContext`,\n  errorMessage: `useFormControlStyles returned is 'undefined'. Seems you forgot to wrap the components in \"<FormControl />\" `\n});\nvar [FormControlProvider, useFormControlContext] = createContext({\n  strict: false,\n  name: \"FormControlContext\"\n});\nfunction useFormControlProvider(props) {\n  const {\n    id: idProp,\n    isRequired,\n    isInvalid,\n    isDisabled,\n    isReadOnly,\n    ...htmlProps\n  } = props;\n  const uuid = useId();\n  const id = idProp || `field-${uuid}`;\n  const labelId = `${id}-label`;\n  const feedbackId = `${id}-feedback`;\n  const helpTextId = `${id}-helptext`;\n  const [hasFeedbackText, setHasFeedbackText] = useState(false);\n  const [hasHelpText, setHasHelpText] = useState(false);\n  const [isFocused, setFocus] = useState(false);\n  const getHelpTextProps = useCallback(\n    (props2 = {}, forwardedRef = null) => ({\n      id: helpTextId,\n      ...props2,\n      ref: mergeRefs(forwardedRef, (node) => {\n        if (!node)\n          return;\n        setHasHelpText(true);\n      })\n    }),\n    [helpTextId]\n  );\n  const getLabelProps = useCallback(\n    (props2 = {}, forwardedRef = null) => ({\n      ...props2,\n      ref: forwardedRef,\n      \"data-focus\": dataAttr(isFocused),\n      \"data-disabled\": dataAttr(isDisabled),\n      \"data-invalid\": dataAttr(isInvalid),\n      \"data-readonly\": dataAttr(isReadOnly),\n      id: props2.id !== void 0 ? props2.id : labelId,\n      htmlFor: props2.htmlFor !== void 0 ? props2.htmlFor : id\n    }),\n    [id, isDisabled, isFocused, isInvalid, isReadOnly, labelId]\n  );\n  const getErrorMessageProps = useCallback(\n    (props2 = {}, forwardedRef = null) => ({\n      id: feedbackId,\n      ...props2,\n      ref: mergeRefs(forwardedRef, (node) => {\n        if (!node)\n          return;\n        setHasFeedbackText(true);\n      }),\n      \"aria-live\": \"polite\"\n    }),\n    [feedbackId]\n  );\n  const getRootProps = useCallback(\n    (props2 = {}, forwardedRef = null) => ({\n      ...props2,\n      ...htmlProps,\n      ref: forwardedRef,\n      role: \"group\"\n    }),\n    [htmlProps]\n  );\n  const getRequiredIndicatorProps = useCallback(\n    (props2 = {}, forwardedRef = null) => ({\n      ...props2,\n      ref: forwardedRef,\n      role: \"presentation\",\n      \"aria-hidden\": true,\n      children: props2.children || \"*\"\n    }),\n    []\n  );\n  return {\n    isRequired: !!isRequired,\n    isInvalid: !!isInvalid,\n    isReadOnly: !!isReadOnly,\n    isDisabled: !!isDisabled,\n    isFocused: !!isFocused,\n    onFocus: () => setFocus(true),\n    onBlur: () => setFocus(false),\n    hasFeedbackText,\n    setHasFeedbackText,\n    hasHelpText,\n    setHasHelpText,\n    id,\n    labelId,\n    feedbackId,\n    helpTextId,\n    htmlProps,\n    getHelpTextProps,\n    getErrorMessageProps,\n    getRootProps,\n    getLabelProps,\n    getRequiredIndicatorProps\n  };\n}\nvar FormControl = forwardRef(\n  function FormControl2(props, ref) {\n    const styles = useMultiStyleConfig(\"Form\", props);\n    const ownProps = omitThemingProps(props);\n    const {\n      getRootProps,\n      htmlProps: _,\n      ...context\n    } = useFormControlProvider(ownProps);\n    const className = cx(\"chakra-form-control\", props.className);\n    return /* @__PURE__ */ jsx(FormControlProvider, { value: context, children: /* @__PURE__ */ jsx(FormControlStylesProvider, { value: styles, children: /* @__PURE__ */ jsx(\n      chakra.div,\n      {\n        ...getRootProps({}, ref),\n        className,\n        __css: styles[\"container\"]\n      }\n    ) }) });\n  }\n);\nFormControl.displayName = \"FormControl\";\nvar FormHelperText = forwardRef(\n  function FormHelperText2(props, ref) {\n    const field = useFormControlContext();\n    const styles = useFormControlStyles();\n    const className = cx(\"chakra-form__helper-text\", props.className);\n    return /* @__PURE__ */ jsx(\n      chakra.div,\n      {\n        ...field == null ? void 0 : field.getHelpTextProps(props, ref),\n        __css: styles.helperText,\n        className\n      }\n    );\n  }\n);\nFormHelperText.displayName = \"FormHelperText\";\n\nexport {\n  useFormControlStyles,\n  useFormControlContext,\n  FormControl,\n  FormHelperText\n};\n","import {\n  useFormControlContext,\n  useFormControlStyles\n} from \"./chunk-6ZNYZUDD.mjs\";\n\n// src/form-label.tsx\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { jsx, jsxs } from \"react/jsx-runtime\";\nvar FormLabel = forwardRef(function FormLabel2(passedProps, ref) {\n  var _a;\n  const styles = useStyleConfig(\"FormLabel\", passedProps);\n  const props = omitThemingProps(passedProps);\n  const {\n    className,\n    children,\n    requiredIndicator = /* @__PURE__ */ jsx(RequiredIndicator, {}),\n    optionalIndicator = null,\n    ...rest\n  } = props;\n  const field = useFormControlContext();\n  const ownProps = (_a = field == null ? void 0 : field.getLabelProps(rest, ref)) != null ? _a : { ref, ...rest };\n  return /* @__PURE__ */ jsxs(\n    chakra.label,\n    {\n      ...ownProps,\n      className: cx(\"chakra-form__label\", props.className),\n      __css: {\n        display: \"block\",\n        textAlign: \"start\",\n        ...styles\n      },\n      children: [\n        children,\n        (field == null ? void 0 : field.isRequired) ? requiredIndicator : optionalIndicator\n      ]\n    }\n  );\n});\nFormLabel.displayName = \"FormLabel\";\nvar RequiredIndicator = forwardRef(\n  function RequiredIndicator2(props, ref) {\n    const field = useFormControlContext();\n    const styles = useFormControlStyles();\n    if (!(field == null ? void 0 : field.isRequired))\n      return null;\n    const className = cx(\"chakra-form__required-indicator\", props.className);\n    return /* @__PURE__ */ jsx(\n      chakra.span,\n      {\n        ...field == null ? void 0 : field.getRequiredIndicatorProps(props, ref),\n        __css: styles.requiredIndicator,\n        className\n      }\n    );\n  }\n);\nRequiredIndicator.displayName = \"RequiredIndicator\";\n\nexport {\n  FormLabel,\n  RequiredIndicator\n};\n","import {\n  useFormControlContext\n} from \"./chunk-6ZNYZUDD.mjs\";\n\n// src/use-form-control.ts\nimport { ariaAttr, callAllHandlers } from \"@chakra-ui/shared-utils\";\nfunction useFormControl(props) {\n  const { isDisabled, isInvalid, isReadOnly, isRequired, ...rest } = useFormControlProps(props);\n  return {\n    ...rest,\n    disabled: isDisabled,\n    readOnly: isReadOnly,\n    required: isRequired,\n    \"aria-invalid\": ariaAttr(isInvalid),\n    \"aria-required\": ariaAttr(isRequired),\n    \"aria-readonly\": ariaAttr(isReadOnly)\n  };\n}\nfunction useFormControlProps(props) {\n  var _a, _b, _c;\n  const field = useFormControlContext();\n  const {\n    id,\n    disabled,\n    readOnly,\n    required,\n    isRequired,\n    isInvalid,\n    isReadOnly,\n    isDisabled,\n    onFocus,\n    onBlur,\n    ...rest\n  } = props;\n  const labelIds = props[\"aria-describedby\"] ? [props[\"aria-describedby\"]] : [];\n  if ((field == null ? void 0 : field.hasFeedbackText) && (field == null ? void 0 : field.isInvalid)) {\n    labelIds.push(field.feedbackId);\n  }\n  if (field == null ? void 0 : field.hasHelpText) {\n    labelIds.push(field.helpTextId);\n  }\n  return {\n    ...rest,\n    \"aria-describedby\": labelIds.join(\" \") || void 0,\n    id: id != null ? id : field == null ? void 0 : field.id,\n    isDisabled: (_a = disabled != null ? disabled : isDisabled) != null ? _a : field == null ? void 0 : field.isDisabled,\n    isReadOnly: (_b = readOnly != null ? readOnly : isReadOnly) != null ? _b : field == null ? void 0 : field.isReadOnly,\n    isRequired: (_c = required != null ? required : isRequired) != null ? _c : field == null ? void 0 : field.isRequired,\n    isInvalid: isInvalid != null ? isInvalid : field == null ? void 0 : field.isInvalid,\n    onFocus: callAllHandlers(field == null ? void 0 : field.onFocus, onFocus),\n    onBlur: callAllHandlers(field == null ? void 0 : field.onBlur, onBlur)\n  };\n}\n\nexport {\n  useFormControl,\n  useFormControlProps\n};\n","// src/input.tsx\nimport { useFormControl } from \"@chakra-ui/form-control\";\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useMultiStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Input = forwardRef(function Input2(props, ref) {\n  const { htmlSize, ...rest } = props;\n  const styles = useMultiStyleConfig(\"Input\", rest);\n  const ownProps = omitThemingProps(rest);\n  const input = useFormControl(ownProps);\n  const _className = cx(\"chakra-input\", props.className);\n  return /* @__PURE__ */ jsx(\n    chakra.input,\n    {\n      size: htmlSize,\n      ...input,\n      __css: styles.field,\n      ref,\n      className: _className\n    }\n  );\n});\nInput.displayName = \"Input\";\nInput.id = \"Input\";\n\nexport {\n  Input\n};\n"],"names":["selectContacts","state","contacts","items","selectStatusFilter","filter","selectIsLoading","isLoading","useSelector","dispatch","useDispatch","direction","align","m","w","as","onSubmit","e","preventDefault","form","target","name","value","number","nameOnTheList","some","contact","toLowerCase","newContact","alert","addContact","reset","htmlFor","I","type","maxLength","required","mb","pattern","bg","color","p","fontSize","_hover","Grid","forwardRef","props","ref","templateAreas","gap","rowGap","columnGap","column","row","autoFlow","autoRows","templateRows","autoColumns","templateColumns","rest","styles","display","gridTemplateAreas","gridGap","gridRowGap","gridColumnGap","gridAutoColumns","gridColumn","gridRow","gridAutoFlow","gridAutoRows","gridTemplateRows","gridTemplateColumns","jsx","chakra","__css","displayName","Object","freeze","mapResponsive","prop","mapper","Array","isArray","map","item","isObject","keys","reduce","result","key","SimpleGrid","columns","spacingX","spacingY","spacing","minChildWidth","theme","useTheme","width","n","_value","getToken","widthToColumns","filteredContacts","includes","length","id","borderWidth","borderRadius","overflow","my","alignItems","justifyContent","onClick","deleteContact","handleDeleteContact","onChange","setFilter","useEffect","fetchContacts","createContext","errorMessage","FormControlStylesProvider","useFormControlStyles","strict","FormControlProvider","useFormControlContext","FormControl","useMultiStyleConfig","idProp","isRequired","isInvalid","isDisabled","isReadOnly","htmlProps","uuid","useId","labelId","feedbackId","helpTextId","useState","hasFeedbackText","setHasFeedbackText","hasHelpText","setHasHelpText","isFocused","setFocus","getHelpTextProps","useCallback","props2","forwardedRef","mergeRefs","node","getLabelProps","dataAttr","getErrorMessageProps","getRootProps","role","getRequiredIndicatorProps","children","onFocus","onBlur","useFormControlProvider","omitThemingProps","context","className","cx","field","helperText","FormLabel","passedProps","_a","useStyleConfig","requiredIndicator","RequiredIndicator","optionalIndicator","ownProps","jsxs","textAlign","useFormControl","_b","_c","disabled","readOnly","labelIds","push","join","callAllHandlers","useFormControlProps","ariaAttr","Input","htmlSize","input","_className","size"],"sourceRoot":""}